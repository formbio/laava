{
  "schema": "v3",
  "id": "laava",
  "title": "formbio/laava",
  "workflowVersion": "dev",
  "displayName": "LAAVA: Long-read AAV Analysis",
  "description": "Perform standard analysis of AAV long-read sequencing data.",
  "type": "object",
  "categories": [
    "Gene Therapy",
    "PacBio"
  ],
  "inputs": {
    "ui_source_type": {
      "title": "Sequence input source (file or folder)",
      "format": "radio",
      "required": true,
      "type": "string",
      "default": "file_source",
      "enum": [
        {
          "name": "File (uBAM or FASTQ)",
          "id": "file_source"
        },
        {
          "name": "Folder (containing BAM or FASTQ files)",
          "id": "folder_source"
        }
      ]
    },
    "seq_reads_file": {
      "title": "Sequencing reads file",
      "description": "PacBio long-read sequencing data (uBAM/FASTQ)",
      "help_text": "PacBio AAV sequencing HiFi/CCS reads as a file in unaligned BAM or FASTQ format. The PacBio instrument should have been run in AAV mode.",
      "filetype": ".bam|.fastq|fastq.gz|.fq|.fq.gz",
      "format": "file",
      "hidden": false,
      "required": true,
      "type": "string"
    },
    "seq_reads_folder": {
      "title": "Sequencing reads folder",
      "description": "PacBio long-read sequencing data (folder of uBAM/FASTQ)",
      "help_text": "Folder of PacBio AAV sequencing HiFi/CCS reads in unaligned BAM or FASTQ format. The PacBio instrument should have been run in AAV mode.",
      "filetype": ".bam|.fastq|fastq.gz|.fq|.fq.gz",
      "format": "dir-path",
      "hidden": true,
      "required": false,
      "type": "string"
    },
    "sample_unique_id": {
      "title": "Sample unique ID",
      "description": "Sample's barcode number or other unique ID",
      "help_text": "A unique identifier to distinguish the sample from others in the same sequencing run. This may be the barcode number used in the sample sheet, or a generated UUID. This string must also be present in the input sequencing reads BAM/FASTQ filename, i.e. that input filename starts with this ID or contains it as a substring.",
      "format": "text",
      "hidden": false,
      "required": false,
      "default": "",
      "type": "string"
    },
    "sample_display_name": {
      "title": "Sample display name",
      "description": "Sample name to display in output",
      "help_text": "Sample name to display in the output report. Not required to be unique; e.g. replicates may share a display name but have different unique IDs.",
      "format": "text",
      "hidden": false,
      "required": false,
      "default": "",
      "type": "string"
    },
    "sample_in_metadata": {
      "title": "Sample metadata",
      "description": "Unique ID and display name for each sample (TSV)",
      "help_text": "Two-column, tab-separated file with headers 'sample_unique_id' (e.g. barcode number, unique within a sequencing run) and 'sample_display_name' (to display in the report, not required to be unique). Each sample unique ID (column 1) must be present in exactly one sequencing reads filename (BAM/FASTQ), as a prefix or substring, so that each of these metadata rows can be mapped 1:1 to an input sequencing reads file.",
      "format": "spreadsheet",
      "filetype": ".tsv",
      "hidden": true,
      "required": false,
      "type": "string",
      "columnConfig": {
        ".tsv": {
          "staticColumns": false,
          "columns": [
            {
              "name": "sample_unique_id",
              "generateFromData": true,
              "generateConfig": {
                  "delimiterPattern": "(\\.bam|\\.hifireads|\\.fastq|\\.fq)",
                  "dataName": "seq_reads_folder"
              },
              "required": true
            },
            {
              "name": "sample_display_name",
              "generateFromData": true,
              "generateConfig": {
                  "delimiterPattern": "(\\.bam|\\.hifireads|\\.fastq|\\.fq)",
                  "dataName": "seq_reads_folder"
              },
              "required": true
            }
          ]
        }
      }
    },
    "vector_type": {
      "title": "Construct vector type",
      "description": "Single-stranded or self-complementary",
      "help_text": "Whether the vector construct is designed to be single-stranded AAV (ssAAV), self-complementary AAV (scAAV), or unknown/unspecified.",
      "format": "radio",
      "required": true,
      "type": "string",
      "default": "unspecified",
      "enum": [
        {
          "name": "Single-stranded AAV (ssAAV)",
          "id": "ss"
        },
        {
          "name": "Self-complementary AAV (scAAV)",
          "id": "sc"
        },
        {
          "name": "Unknown / Unspecified",
          "id": "unspecified"
        }
      ]
    },
    "vector_bed": {
      "title": "Vector annotation",
      "description": "Vector sequence annotation (BED)",
      "help_text": "Annotated vector region coordinates in 4-column BED format. Must include 1 region with the label 'vector'.",
      "filetype": ".bed",
      "format": "spreadsheet",
      "hidden": false,
      "required": true,
      "type": "string",
      "columnConfig": {
        ".bed": {
          "staticColumns": true,
          "columns": [
            {
              "name": "chrom",
              "required": true
            },
            {
              "name": "chromStart",
              "required": true
            },
            {
              "name": "chromEnd",
              "required": true
            },
            {
              "name": "name"
            }
          ]
        }
      }
    },
    "vector_fa": {
      "title": "Vector sequence",
      "description": "Vector plasmid reference sequence (FASTA)",
      "help_text": "Reference sequence for the vector plasmid. The annotations apply to this sequence.",
      "filetype": ".fa|.fasta|.dna|.fna",
      "format": "file",
      "hidden": false,
      "required": true,
      "type": "string"
    },
    "packaging_fa": {
      "title": "Packaging sequences",
      "description": "Helper and RepCap plasmids (if used) and other reference sequences (FASTA)",
      "help_text": "Reference sequences for the helper and rep/cap plasmids and other sequences of interest, such as Lambda, as a FASTA file with one or more records. This should not include the vector construct or host genome sequences.",
      "filetype": ".fa|.fasta|.dna|.fna",
      "format": "file",
      "hidden": false,
      "required": false,
      "type": "string"
    },
    "host_fa": {
      "title": "Host sequences",
      "description": "Host genome reference sequence (FASTA)",
      "help_text": "Reference sequence for the host genome.",
      "filetype": ".fa|.fasta|.dna|.fna",
      "format": "file",
      "hidden": false,
      "required": false,
      "type": "string"
    },
    "itr_label_1": {
      "title": "ITR region label 1",
      "description": "First ITR label in annotation BED",
      "help_text": "Region label used in the vector annotation BED file to indicate the first (i.e. left, 5') inverted terminal repeat (ITR). This label is often 'ITR' or 'ITR-L', but can vary. Case-sensitive.",
      "format": "text",
      "hidden": false,
      "required": false,
      "default": "ITR",
      "type": "string"
    },
    "itr_label_2": {
      "title": "ITR region label 2",
      "description": "Second ITR label in annotation BED",
      "help_text": "Region label used in the vector annotation BED file to indicate the second (i.e. right, 3') inverted terminal repeat (ITR). This label is often 'ITR' or 'ITR-R', but can vary. Case-sensitive. If the same label is used for both ITRs in the annotation BED (e.g. 'ITR'), it's not necessary to specify it again here; ITR region label 1 will correctly match both ITRs in that case.",
      "format": "text",
      "hidden": false,
      "required": false,
      "default": "",
      "type": "string"
    },
    "mitr_label": {
      "title": "Mutated ITR region label",
      "description": "Mutated ITR label in annotation BED",
      "help_text": "For self-complementary vectors, the region label used in the vector annotation BED file to indicate the mutated inverted terminal repeat (mITR), as opposed to wild-type ITR (WT-ITR or wtITR). is often 'mITR', but can vary. Case-sensitive.",
      "format": "text",
      "hidden": false,
      "required": false,
      "default": "mITR",
      "type": "string"
    },
    "repcap_name": {
      "title": "RepCap sequence ID",
      "description": "RepCap plasmid sequence identifier used in the packaging FASTA file",
      "help_text": "Sequence identifier used in the packaging FASTA file (above) corresponding to the rep/cap plasmid reference sequence, if used. Leave this blank if a dual construct was used (rep/cap on the vector backbone) or you're unsure.",
      "format": "text",
      "hidden": false,
      "required": false,
      "default": "",
      "type": "string"
    },

    "helper_name": {
      "title": "Helper sequence ID",
      "description": "Helper plasmid sequence identifier used in the packaging FASTA file",
      "help_text": "Sequence identifier used in the packaging FASTA file (above) corresponding to the helper plasmid reference sequence, if used. Leave this blank if you're unsure.",
      "format": "text",
      "hidden": false,
      "required": false,
      "default": "",
      "type": "string"
    },
    "lambda_name": {
      "title": "Lambda sequence ID",
      "description": "Lambda phage sequence identifier used in the packaging FASTA file",
      "help_text": "Sequence identifier used in the packaging FASTA file (above) corresponding to the lambda phage reference sequence, if used.",
      "format": "text",
      "hidden": false,
      "required": false,
      "default": "",
      "type": "string"
    },
    "flipflop_name": {
      "title": "AAV Serotype",
      "description": "AAV serotype name for flip/flop analysis",
      "help_text": "Serotype name for ITR flip/flop analysis, e.g. 'AAV2'. Leave blank to skip flip/flop analysis.",
      "format": "text",
      "hidden": false,
      "required": false,
      "default": "",
      "type": "string"
    },
    "flipflop_fa": {
      "title": "Flip/flop sequences",
      "description": "Flip/flop ITR sequences (FASTA).",
      "help_text": "Provide for flip/flop analysis if serotype is not AAV2 (which is built in), and provide a different value for flipflop_name. FASTA file must have 4 records with the exact sequence IDs SEQ_LEFT_FLIP, SEQ_LEFT_FLOP, SEQ_RIGHT_FLIP, SEQ_RIGHT_FLOP.",
      "filetype": ".fa|.fasta|.dna|.fna",
      "format": "file",
      "hidden": false,
      "required": false,
      "type": "string"
    },
    "target_gap_threshold": {
      "title": "Target gap threshold",
      "description": "",
      "help_text":  "Maximum total gap size allowed in the target region alignment to count a read as 'full'; skipping through the on-target region for more than this is considered 'full-gap'.",
      "type": "integer",
      "hidden": false,
      "required": true,
      "default": 200,
      "minimum": 0,
      "maximum": 1000
    },
    "max_allowed_outside_vector": {
      "title": "Max allowed outside vector",
      "description": "",
      "help_text": "Maximum allowed, in bp, outside the annotated vector region for a read that fully covers the vector region to be still considered 'full' rather than 'vector+backbone'.",
      "type": "integer",
      "hidden": false,
      "required": true,
      "default": 100,
      "minimum": 0,
      "maximum": 200
    },
    "max_allowed_missing_flanking": {
      "title": "Max allowed missing from ITR flank",
      "description": "",
      "help_text": "Maximum allowed, in bp, missing from the left and right flanks of the annotated vector region to be still considered 'full' rather than 'partial'.",
      "type": "integer",
      "hidden": false,
      "required": true,
      "default": 100,
      "minimum": 0,
      "maximum": 200
    },
    "min_supp_joint_coverage": {
      "title": "Minimum threshold for scAAV and tandem read classification",
      "description": "",
      "help_text": "Minimum fraction of a read's total length that must be covered jointly by a pair of primary and supplementary alignments, start-to-end, to call the read as self-complementary or tandem repeat.",
      "type": "text",
      "hidden": false,
      "required": true,
      "default": 0.8
    },
    "container_version": {
      "title": "Container version",
      "description": "Use 'latest' for development",
      "help_text": "",
      "format": "text",
      "hidden": true,
      "required": false,
      "type": "string"
    }
  },
  "conditionals": [
    {
      "if": [
        {
          "ui_source_type": {
            "eq": "folder_source"
          }
        }
      ],
      "then": {
        "inputs": {
          "seq_reads_file": {
            "hidden": true,
            "required": false
          },
          "seq_reads_folder": {
            "hidden": false,
            "required": true
          },
          "sample_unique_id": {
            "hidden": true
          },
          "sample_display_name": {
            "hidden": true
          },
          "sample_in_metadata": {
            "hidden": false
          }
        }
      }
    },
    {
      "if": [
        {
          "vector_type": {
            "eq": "sc"
          }
        }
      ],
      "then": {
        "inputs": {
          "itr_label_2": {
            "hidden": true
          },
          "mitr_label": {
            "required": true
          }
        }
      }
    },
    {
      "if": [
        {
          "vector_type": {
            "eq": "ss"
          }
        }
      ],
      "then": {
        "inputs": {
          "itr_label_2": {
            "hidden": false
          },
          "mitr_label": {
            "hidden": true,
            "required": false
          }
        }
      }
    }
  ],
  "ui": {
    "inputs": [
      {
        "id": "vector_input",
        "title": "Vector inputs",
        "description": "Sequencing and vector data",
        "help_text": "Sequencing and vector input files for analysis",
        "hidden": false,
        "fields": [
          "ui_source_type",
          "seq_reads_file",
          "seq_reads_folder",
          "sample_unique_id",
          "sample_display_name",
          "sample_in_metadata",
          "vector_type",
          "vector_bed",
          "vector_fa",
          "itr_label_1",
          "itr_label_2",
          "mitr_label"
        ]
      },
      {
        "id": "other_input",
        "title": "Other inputs",
        "description": "Packaging and flip-flop data",
        "help_text": "Packaging and flip-flop input files",
        "hidden": false,
        "fields": [
          "packaging_fa",
          "host_fa",
          "repcap_name",
          "helper_name",
          "lambda_name",
          "flipflop_name",
          "flipflop_fa"
        ]
      },
      {
        "id": "adv_config",
        "title": "Advanced Configuration",
        "description": "Advanced configuration settings",
        "help_text": "Advanced configuration values for read classification",
        "hidden": false,
        "fields": [
          "target_gap_threshold",
          "max_allowed_outside_vector",
          "max_allowed_missing_flanking",
          "min_supp_joint_coverage"
        ]
      }
    ]
  }
}
