manifest {
  name            = 'laava'
  author          = 'formbio'
  homePage        = 'https://github.com/formbio/laava'
  description     = 'Long-read AAV Analysis'
  mainScript      = 'main.nf'
  nextflowVersion = '>=24.02'
  version         = 'dev'
}

params {
  // Workflow inputs
  ui_source_type = 'file_source'
  seq_reads_file = null
  seq_reads_folder = null
  sample_unique_id = ''
  sample_display_name = ''
  sample_in_metadata = null
  vector_type = 'unspecified'
  vector_bed = null
  vector_fa = null
  packaging_fa = null
  host_fa = null
  itr_label_1 = ''
  itr_label_2 = ''
  mitr_label = ''
  repcap_name = ''
  helper_name = ''
  lambda_name = ''
  flipflop_name = ''
  flipflop_fa = null
  // "full" read classification thresholds
  target_gap_threshold = 200
  max_allowed_outside_vector = 100
  max_allowed_missing_flanking = 100
  min_supp_joint_coverage = 0.8

  // Required for Form Bio workflows
  output = 'output'

  // When LAAVA is used as a submodule, this becomes 'modules/laava'
  laava_dir = "${projectDir}"

  // Hosted Docker containers
  container_repo = 'ghcr.io/formbio'
  // use ':dev' for local testing, ':latest' for cloud
  container_version = ':latest'
}

process {
  container = "${params.container_repo}/laava${params.container_version}"
  cpus = 4
  //shell = ['/bin/bash', '-euo', 'pipefail']

  executor = 'google-batch'
  maxRetries = 3
  maxErrors = '-1'
  maxForks = 50
  cache = 'lenient'
  // Only has effect on cloud
  machineType = 'e2-highmem-8'
  disk = '500 GB'
}


// Execution environments

def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')

docker {
  enabled = true
}

executor {
  queueSize = 50
  name = 'google-batch'
  submitRateLimit = '10sec'
  pollInterval = '30 sec'
}

google {
  region = 'us-central1'
  batch {
    bootDiskSize = '100.GB'
    debug = true
    sshDaemon = true
  }
}

profiles {
  // For local Nextflow development
  local {
    params.output = 'workflow-outputs/output'
    process.executor = 'local'
    process.queue = 10
    workDir = 'workflow-outputs/work'

    trace {
        enabled = true
        overwrite = true
        file = 'nextflow_logs/pipeline_trace.txt'
        field = 'task_id,native_id,process,name,status,exit,submit,start,complete,duration,realtime'
    }
    timeline {
        enabled = true
        overwrite = true
        file = 'workflow-outputs/nextflow_logs/timeline.html'
    }
    report {
        enabled = true
        overwrite = true
        file = 'workflow-outputs/nextflow_logs/report.html'
    }
    dag {
        enabled = true
        overwrite = true
        file = 'workflow-outputs/nextflow_logs/pipeline_dag_${trace_timestamp}.svg'
    }
  }

  // Cloud platforms
  googlebatch {
    process {
      executor = 'google-batch'
    }
  }
}
